import re

from telebot.types import CallbackQuery, Message

from app.bot.bot_instance import bot
from app.bot.keyboards import temp_messages
from app.db.db_session import SessionLocal
from app.services import CategoryService
from app.logger import logger


@bot.callback_query_handler(func=lambda call: call.data == "add_category")
def add_category(call: CallbackQuery):
    tg_id = call.from_user.id
    bot.answer_callback_query(call.id)
    
    if tg_id in temp_messages:
        try:
            bot.delete_message(call.message.chat.id, temp_messages[tg_id])
        except:
            pass
        temp_messages.pop(tg_id)
    
    msg = bot.send_message(call.message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üè∑Ô∏è:\n'
                                                 f'–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)', )
    temp_messages[tg_id] = msg.message_id
    
    bot.register_next_step_handler(msg, check_to_correct_name_category)


def check_to_correct_name_category(message: Message):
    tg_id = message.from_user.id
    chat_id = message.chat.id
    msg_text = message.text.strip()
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if tg_id in temp_messages:
        try:
            bot.delete_message(chat_id, temp_messages[tg_id])
        except:
            pass
        temp_messages.pop(tg_id)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∏–º–µ–Ω–∏
    correct_msg = bool(re.match(r'^[\w–ê-–Ø–∞-—è\s-]{3,}$', msg_text))
    
    try:
        if correct_msg:
            with SessionLocal() as session:
                category_service = CategoryService(session=session)
                
                # üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å—Ç—å –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
                existing = category_service.get_category_by_name(msg_text)
                if existing:
                    bot.delete_message(message.chat.id, message.message_id)
                    msg = bot.send_message(
                        chat_id,
                        f'‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è *{msg_text}* —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è:',
                        parse_mode="Markdown"
                    )
                    bot.register_next_step_handler(msg, check_to_correct_name_category)
                else:
                    new_category = category_service.create_category(msg_text)
                    if new_category:
                        bot.delete_message(message.chat.id, message.message_id)
                        msg = bot.send_message(chat_id, f'‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è *{msg_text}* —Å–æ–∑–¥–∞–Ω–∞', parse_mode="Markdown")
                    else:
                        msg = bot.send_message(chat_id, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
        else:
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(
                chat_id,
                f'‚ö†Ô∏è –ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞).\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:'
            )
            bot.register_next_step_handler(msg, check_to_correct_name_category)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        temp_messages[tg_id] = msg.message_id
    
    except Exception as e:
        logger.error(e)
        msg = bot.send_message(chat_id, f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
        temp_messages[tg_id] = msg.message_id
