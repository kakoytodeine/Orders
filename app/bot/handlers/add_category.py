import re
from telebot.types import CallbackQuery, Message

from app.bot.bot_instance import bot
from app.bot.keyboards import get_main_menu
from app.db.db_session import SessionLocal
from app.services import CategoryService
from app.logger import logger
from app.bot.temp_message import _clear_temp_message, _save_temp_message


@bot.callback_query_handler(func=lambda call: call.data == "add_category")
def add_category(call: CallbackQuery):
    tg_id = call.from_user.id
    chat_id = call.message.chat.id
    bot.answer_callback_query(call.id)
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ temp_message
    _clear_temp_message(chat_id, tg_id)
    
    msg = bot.send_message(
        chat_id,
        '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üè∑Ô∏è:\n–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)'
    )
    _save_temp_message(tg_id, msg.message_id)
    
    bot.register_next_step_handler(msg, check_to_correct_name_category)


def check_to_correct_name_category(message: Message):
    tg_id = message.from_user.id
    chat_id = message.chat.id
    msg_text = message.text.strip()
    
    # --- –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π temp_message ---
    _clear_temp_message(chat_id, tg_id)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∏–º–µ–Ω–∏
    correct_msg = bool(re.match(r'^[\w–ê-–Ø–∞-—è\s-]{3,}$', msg_text))
    
    try:
        with SessionLocal() as session:
            category_service = CategoryService(session=session)
            
            if correct_msg:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                existing = category_service.get_category_by_name(msg_text)
                if existing:
                    msg = bot.send_message(
                        chat_id,
                        f'‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è *{msg_text}* —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è:',
                        parse_mode="Markdown",
                    )
                    _save_temp_message(tg_id, msg.message_id)
                    
                    
                    
                    bot.register_next_step_handler(msg, check_to_correct_name_category)
                else:
                    new_category = category_service.create_category(msg_text)
                    if new_category:
                        msg = bot.send_message(
                            chat_id,
                            f'‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è *{msg_text}* —Å–æ–∑–¥–∞–Ω–∞',
                            parse_mode="Markdown"
                        )
                        _save_temp_message(tg_id, msg.message_id)
                        
                        menu_msg = bot.send_message(
                            chat_id,
                            "üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                            reply_markup=get_main_menu(tg_id)
                        )
                        _save_temp_message(tg_id, menu_msg.message_id)
                    else:
                        msg = bot.send_message(chat_id, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
                        _save_temp_message(tg_id, msg.message_id)
            else:
                msg = bot.send_message(
                    chat_id,
                    '‚ö†Ô∏è –ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞).\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:'
                )
                _save_temp_message(tg_id, msg.message_id)
                bot.register_next_step_handler(msg, check_to_correct_name_category)
    except Exception as e:
        logger.error(e)
        msg = bot.send_message(chat_id, '‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
        _save_temp_message(tg_id, msg.message_id)
